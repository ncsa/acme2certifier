name: Container Deployment Tests

on:
  push:
  pull_request:
    branches: [ devel ]
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 2 * * 6'

jobs:
  docker-compose_apache2_wsgi:
    name: "Docker compose - apache2 wsgi"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: "Build the stack"
      working-directory: examples/Docker/
      run: |
        sudo mkdir -p data
        docker network create acme
        docker-compose up -d
        docker-compose logs
    - name: "[ PREPARE ] enable tls"
      run: |
        sudo cp examples/ca_handler/openssl_ca_handler.py examples/Docker/data/ca_handler.py
        sudo mkdir -p examples/Docker/data/acme_ca/certs
        sudo cp test/ca/sub-ca-key.pem test/ca/sub-ca-crl.pem test/ca/sub-ca-cert.pem test/ca/root-ca-cert.pem examples/Docker/data/acme_ca/
        sudo cp .github/openssl_ca_handler.py_acme_srv_default_handler.cfg examples/Docker/data/acme_srv.cfg
        sudo cp .github/acme2certifier.pem examples/Docker/data/acme2certifier.pem
        cd examples/Docker/
        docker-compose restart
        docker-compose logs
    - name: "Test if http://acme-srv/directory is accessable"
      run: docker run -i --rm --network acme curlimages/curl -f http://acme-srv/directory
    - name: "Test if https://acme-srv/directory is accessable"
      run: docker run -i --rm --network acme curlimages/curl --insecure -f https://acme-srv/directory
    - name: "[ PREPARE ] prepare acme.sh container"
      run: |
        docker run --rm -id -v "$(pwd)/acme-sh":/acme.sh --network acme --name=acme-sh neilpang/acme.sh:latest daemon
    - name: "[ ENROLL ] register via http"
      run: |
        docker exec -i acme-sh acme.sh --server http://acme-srv  --register-account --accountemail 'acme-sh@example.com' --accountkeylength ec-256 --debug 2
    - name: "[ ENROLL ] register via https"
      run: |
        docker exec -i acme-sh acme.sh --server https://acme-srv  --register-account --accountemail 'acme-sh@example.com' --accountkeylength ec-256 --insecure --debug 2
    - name: "[ PREPARE ] test ca_handler_migration"
      run: |
        sudo cp .github/openssl_ca_handler_v16.py examples/Docker/data/ca_handler.py
        cd examples/Docker/
        docker-compose restart
        head -n 13 data/ca_handler.py
        docker-compose logs
    - name: "[ PREPARE ] Sleep for 10s"
      uses: juliangruber/sleep-action@v1
      with:
        time: 10s
    - name: "Test if http://acme-srv/directory is accessable"
      run: docker run -i --rm --network acme curlimages/curl -f http://acme-srv/directory
    - name: "[ ENROLL ] enroll certificate to verify handler migration"
      run: |
        docker exec -i acme-sh acme.sh --server http://acme-srv --register-account --accountemail 'acme-sh@example.com' --debug --output-insecure
    - name: "[ * ] collecting test data"
      if: ${{ failure() }}
      run: |
        mkdir -p ${{ github.workspace }}/artifact/upload
        sudo cp -rp examples/Docker/data/ ${{ github.workspace }}/artifact/data/
        cd examples/Docker
        docker-compose logs > ${{ github.workspace }}/artifact/docker-compose.log
        sudo tar -C ${{ github.workspace }}/artifact/ -cvzf ${{ github.workspace }}/artifact/upload/artifact.tar.gz docker-compose.log data acme_sh
    - name: "[ * ] uploading artifacts"
      uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: docker-compose_apache2_wsgi.tar.gz
        path: ${{ github.workspace }}/artifact/upload/

  docker-compose_nginx_wsgi:
    name: "Docker compose - nginx wsgi"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: "Build the stack"
      working-directory: examples/Docker/
      run: |
        sed -i "s/apache2/nginx/g" .env
        sudo mkdir -p data
        docker network create acme
        docker-compose up -d
        docker-compose logs
    - name: "[ PREPARE ] enable tls"
      run: |
        sudo cp examples/ca_handler/openssl_ca_handler.py examples/Docker/data/ca_handler.py
        sudo mkdir -p examples/Docker/data/acme_ca/certs
        sudo cp test/ca/sub-ca-key.pem test/ca/sub-ca-crl.pem test/ca/sub-ca-cert.pem test/ca/root-ca-cert.pem examples/Docker/data/acme_ca/
        sudo cp .github/openssl_ca_handler.py_acme_srv_default_handler.cfg examples/Docker/data/acme_srv.cfg
        sudo cp .github/acme2certifier_cert.pem examples/Docker/data/acme2certifier_cert.pem
        sudo cp .github/acme2certifier_key.pem examples/Docker/data/acme2certifier_key.pem
        cd examples/Docker/
        docker-compose restart
        docker-compose logs
    - name: "Test if http://acme-srv/directory is accessable"
      run: docker run -i --rm --network acme curlimages/curl -f http://acme-srv/directory
    - name: "Test if https://acme-srv/directory is accessable"
      run: docker run -i --rm --network acme curlimages/curl --insecure -f https://acme-srv/directory
    - name: "[ PREPARE ] prepare acme.sh container"
      run: |
        docker run --rm -id -v "$(pwd)/acme-sh":/acme.sh --network acme --name=acme-sh neilpang/acme.sh:latest daemon
    - name: "[ ENROLL ] register via http"
      run: |
        docker exec -i acme-sh acme.sh --server http://acme-srv  --register-account --accountemail 'acme-sh@example.com' --accountkeylength ec-256 --debug 2
    - name: "[ ENROLL ] register via https"
      run: |
        docker exec -i acme-sh acme.sh --server https://acme-srv  --register-account --accountemail 'acme-sh@example.com' --accountkeylength ec-256 --insecure --debug 2
    - name: "[ PREPARE ] test ca_handler_migration"
      run: |
        sudo cp .github/openssl_ca_handler_v16.py examples/Docker/data/ca_handler.py
        cd examples/Docker/
        docker-compose restart
        head -n 13 data/ca_handler.py
        docker-compose logs
    - name: "[ PREPARE ] Sleep for 10s"
      uses: juliangruber/sleep-action@v1
      with:
        time: 10s
    - name: "Test if http://acme-srv/directory is accessable"
      run: docker run -i --rm --network acme curlimages/curl -f http://acme-srv/directory
    - name: "[ ENROLL ] enroll certificate to verify handler migration"
      run: |
        docker exec -i acme-sh acme.sh --server http://acme-srv --register-account --accountemail 'acme-sh@example.com' --debug --output-insecure
    - name: "[ * ] collecting test data"
      if: ${{ failure() }}
      run: |
        mkdir -p ${{ github.workspace }}/artifact/upload
        sudo cp -rp examples/Docker/data/ ${{ github.workspace }}/artifact/data/
        cd examples/Docker
        docker-compose logs > ${{ github.workspace }}/artifact/docker-compose.log
        sudo tar -C ${{ github.workspace }}/artifact/ -cvzf ${{ github.workspace }}/artifact/upload/artifact.tar.gz docker-compose.log data acme_sh
    - name: "[ * ] uploading artifacts"
      uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: docker-compose_nginx_wsgi.tar.gz
        path: ${{ github.workspace }}/artifact/upload/

  docker-compose_apache2_django:
    name: "Docker compose - apache2 django"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: "Build the stack"
      working-directory: examples/Docker/
      run: |
        sed -i "s/wsgi/django/g" .env
        sudo mkdir -p data
        docker network create acme
        docker-compose up -d
        docker-compose logs
    - name: "[ PREPARE ] enable tls"
      run: |
        sudo cp examples/ca_handler/openssl_ca_handler.py examples/Docker/data/ca_handler.py
        sudo mkdir -p examples/Docker/data/acme_ca/certs
        sudo cp test/ca/sub-ca-key.pem test/ca/sub-ca-crl.pem test/ca/sub-ca-cert.pem test/ca/root-ca-cert.pem examples/Docker/data/acme_ca/
        sudo cp .github/openssl_ca_handler.py_acme_srv_default_handler.cfg examples/Docker/data/acme_srv.cfg
        sudo cp .github/django_settings.py examples/Docker/data/settings.py
        sudo cp .github/acme2certifier.pem examples/Docker/data/acme2certifier.pem
        cd examples/Docker/
        docker-compose restart
        docker-compose logs
    - name: "Test if http://acme-srv/directory is accessable"
      run: docker run -i --rm --network acme curlimages/curl -f http://acme-srv/directory
    - name: "Test if https://acme-srv/directory is accessable"
      run: docker run -i --rm --network acme curlimages/curl --insecure -f https://acme-srv/directory
    - name: "[ PREPARE ] prepare acme.sh container"
      run: |
        docker run --rm -id -v "$(pwd)/acme-sh":/acme.sh --network acme --name=acme-sh neilpang/acme.sh:latest daemon
    - name: "[ ENROLL ] register via http"
      run: |
        docker exec -i acme-sh acme.sh --server http://acme-srv  --register-account --accountemail 'acme-sh@example.com' --accountkeylength ec-256 --debug 2
    - name: "[ ENROLL ] register via https"
      run: |
        docker exec -i acme-sh acme.sh --server https://acme-srv  --register-account --accountemail 'acme-sh@example.com' --accountkeylength ec-256 --insecure --debug 2
    - name: "[ PREPARE ] test ca_handler_migration"
      run: |
        sudo cp .github/openssl_ca_handler_v16.py examples/Docker/data/ca_handler.py
        cd examples/Docker/
        docker-compose restart
        head -n 13 data/ca_handler.py
        docker-compose logs
    - name: "[ PREPARE ] Sleep for 10s"
      uses: juliangruber/sleep-action@v1
      with:
        time: 10s
    - name: "Test if http://acme-srv/directory is accessable"
      run: docker run -i --rm --network acme curlimages/curl -f http://acme-srv/directory
    - name: "[ ENROLL ] enroll certificate to verify handler migration"
      run: |
        docker exec -i acme-sh acme.sh --server http://acme-srv --register-account --accountemail 'acme-sh@example.com' --debug --output-insecure
    - name: "[ * ] collecting test data"
      if: ${{ failure() }}
      run: |
        mkdir -p ${{ github.workspace }}/artifact/upload
        sudo cp -rp examples/Docker/data/ ${{ github.workspace }}/artifact/data/
        cd examples/Docker
        docker-compose logs > ${{ github.workspace }}/artifact/docker-compose.log
        sudo tar -C ${{ github.workspace }}/artifact/ -cvzf ${{ github.workspace }}/artifact/upload/artifact.tar.gz docker-compose.log data acme_sh
    - name: "[ * ] uploading artifacts"
      uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: docker-compose_apache2_django.tar.gz
        path: ${{ github.workspace }}/artifact/upload/
  docker-compose_nginx_django:
    name: "Docker compose - nginx django"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: "Build the stack"
      working-directory: examples/Docker/
      run: |
        sed -i "s/wsgi/django/g" .env
        sed -i "s/apache2/nginx/g" .env
        sudo mkdir -p data
        docker network create acme
        docker-compose up -d
        docker-compose logs
    - name: "[ PREPARE ] enable tls"
      run: |
        sudo cp examples/ca_handler/openssl_ca_handler.py examples/Docker/data/ca_handler.py
        sudo mkdir -p examples/Docker/data/acme_ca/certs
        sudo cp test/ca/sub-ca-key.pem test/ca/sub-ca-crl.pem test/ca/sub-ca-cert.pem test/ca/root-ca-cert.pem examples/Docker/data/acme_ca/
        sudo cp .github/openssl_ca_handler.py_acme_srv_default_handler.cfg examples/Docker/data/acme_srv.cfg
        sudo cp .github/django_settings.py examples/Docker/data/settings.py
        sudo cp .github/acme2certifier_cert.pem examples/Docker/data/acme2certifier_cert.pem
        sudo cp .github/acme2certifier_key.pem examples/Docker/data/acme2certifier_key.pem
        cd examples/Docker/
        docker-compose restart
        docker-compose logs
    - name: "Test if http://acme-srv/directory is accessable"
      run: docker run -i --rm --network acme curlimages/curl -f http://acme-srv/directory
    - name: "Test if https://acme-srv/directory is accessable"
      run: docker run -i --rm --network acme curlimages/curl --insecure -f https://acme-srv/directory
    - name: "[ PREPARE ] prepare acme.sh container"
      run: |
        docker run --rm -id -v "$(pwd)/acme-sh":/acme.sh --network acme --name=acme-sh neilpang/acme.sh:latest daemon
    - name: "[ ENROLL ] register via http"
      run: |
        docker exec -i acme-sh acme.sh --server http://acme-srv  --register-account --accountemail 'acme-sh@example.com' --accountkeylength ec-256 --debug 2
    - name: "[ ENROLL ] register via https"
      run: |
        docker exec -i acme-sh acme.sh --server https://acme-srv  --register-account --accountemail 'acme-sh@example.com' --accountkeylength ec-256 --insecure --debug 2
    - name: "[ PREPARE ] test ca_handler_migration"
      run: |
        sudo cp .github/openssl_ca_handler_v16.py examples/Docker/data/ca_handler.py
        cd examples/Docker/
        docker-compose restart
        head -n 13 data/ca_handler.py        
        docker-compose logs
    - name: "[ PREPARE ] Sleep for 10s"
      uses: juliangruber/sleep-action@v1
      with:
        time: 10s
    - name: "Test if http://acme-srv/directory is accessable"
      run: docker run -i --rm --network acme curlimages/curl -f http://acme-srv/directory
    - name: "[ ENROLL ] enroll certificate to verify handler migration"
      run: |
        docker exec -i acme-sh acme.sh --server http://acme-srv --register-account --accountemail 'acme-sh@example.com' --debug --output-insecure
    - name: "[ * ] collecting test data"
      if: ${{ failure() }}
      run: |
        mkdir -p ${{ github.workspace }}/artifact/upload
        sudo cp -rp examples/Docker/data/ ${{ github.workspace }}/artifact/data/
        cd examples/Docker
        docker-compose logs > ${{ github.workspace }}/artifact/docker-compose.log
        sudo tar -C ${{ github.workspace }}/artifact/ -cvzf ${{ github.workspace }}/artifact/upload/artifact.tar.gz docker-compose.log data acme_sh
    - name: "[ * ] uploading artifacts"
      uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: docker-compose_nginx_django.tar.gz
        path: ${{ github.workspace }}/artifact/upload/
