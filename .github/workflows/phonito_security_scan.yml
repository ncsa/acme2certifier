name: phonito security scans
on:
  # temporarily disable
  push:
    branches-ignore:
      - '**'
  #schedule:
  #  # * daily checks at 05:00am
  #  - cron:  '0 5 * * *'
jobs:

  apache2_wsgi:
    name: Scan acme2certifier:apache2-wsgi
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: "[ PREPARE ] setup openssl ca_handler"
        run: |
          docker network create acme
          sudo mkdir -p examples/Docker/data
          sudo cp examples/ca_handler/openssl_ca_handler.py examples/Docker/data/ca_handler.py
          sudo mkdir -p examples/Docker/data/acme_ca/certs
          sudo cp test/ca/sub-ca-key.pem test/ca/sub-ca-crl.pem test/ca/sub-ca-cert.pem test/ca/root-ca-cert.pem examples/Docker/data/acme_ca/
          sudo cp .github/openssl_ca_handler.py_acme_srv_default_handler.cfg examples/Docker/data/acme_srv.cfg

      - name: "[ PREPARE ] apache2 django container"
        run: |
          docker run -d -p 80:80 --rm -id --network acme --name=acme-srv -v "$(pwd)/examples/Docker/data":/var/www/acme2certifier/volume/ grindsa/acme2certifier:apache2-wsgi

      - name: "[ SCAN ] Phonito Security Scan"
        uses: phonito/phonito-scanner-action@master
        with:
          image: grindsa/acme2certifier:apache2-wsgi
          fail-level: MEDIUM
          phonito-token: '${{ secrets.PHONITO_TOKEN }}'

  apache2_django:
    name: Scan acme2certifier:apache2-django
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: "[ PREPARE ] setup openssl ca_handler and django config"
        run: |
          docker network create acme
          sudo mkdir -p examples/Docker/data
          sudo cp examples/ca_handler/openssl_ca_handler.py examples/Docker/data/ca_handler.py
          sudo mkdir -p examples/Docker/data/acme_ca/certs
          sudo cp test/ca/sub-ca-key.pem test/ca/sub-ca-crl.pem test/ca/sub-ca-cert.pem test/ca/root-ca-cert.pem examples/Docker/data/acme_ca/
          sudo cp .github/openssl_ca_handler.py_acme_srv_default_handler.cfg examples/Docker/data/acme_srv.cfg
          sudo cp .github/django_settings.py examples/Docker/data/settings.py

      - name: "[ PREPARE ] apache2 wsgi container"
        run: |
          docker run -d -p 80:80 --rm -id --network acme --name=acme-srv -v "$(pwd)/examples/Docker/data":/var/www/acme2certifier/volume/ grindsa/acme2certifier:apache2-django
          docker exec acme-srv python3 /var/www/acme2certifier/tools/django_update.py
          sudo chmod a+w examples/Docker/data/db.sqlite3

      - name: "[ SCAN ] Phonito Security Scan"
        uses: phonito/phonito-scanner-action@master
        with:
          image: grindsa/acme2certifier:apache2-django
          fail-level: MEDIUM
          phonito-token: '${{ secrets.PHONITO_TOKEN }}'

  nginx_wsgi:
    name: Scan acme2certifier:nginx-wsgi
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: "[ PREPARE ] setup openssl ca_handler"
        run: |
          docker network create acme
          sudo mkdir -p examples/Docker/data
          sudo cp examples/ca_handler/openssl_ca_handler.py examples/Docker/data/ca_handler.py
          sudo mkdir -p examples/Docker/data/acme_ca/certs
          sudo cp test/ca/sub-ca-key.pem test/ca/sub-ca-crl.pem test/ca/sub-ca-cert.pem test/ca/root-ca-cert.pem examples/Docker/data/acme_ca/
          sudo cp .github/openssl_ca_handler.py_acme_srv_default_handler.cfg examples/Docker/data/acme_srv.cfg

      - name: "[ PREPARE ] nginx wsgi container"
        run: |
          docker run -d -p 80:80 --rm -id --network acme --name=acme-srv -v "$(pwd)/examples/Docker/data":/var/www/acme2certifier/volume/ grindsa/acme2certifier:nginx-wsgi

      - name: "[ SCAN ] Phonito Security Scan"
        uses: phonito/phonito-scanner-action@master
        with:
          image: grindsa/acme2certifier:nginx-wsgi
          fail-level: MEDIUM
          phonito-token: '${{ secrets.PHONITO_TOKEN }}'

  nginx_django:
    name: Scan acme2certifier:nginx-django
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: "[ PREPARE ] setup openssl ca_handler and django config"
        run: |
          docker network create acme
          sudo mkdir -p examples/Docker/data
          sudo cp examples/ca_handler/openssl_ca_handler.py examples/Docker/data/ca_handler.py
          sudo mkdir -p examples/Docker/data/acme_ca/certs
          sudo cp test/ca/sub-ca-key.pem test/ca/sub-ca-crl.pem test/ca/sub-ca-cert.pem test/ca/root-ca-cert.pem examples/Docker/data/acme_ca/
          sudo cp .github/openssl_ca_handler.py_acme_srv_default_handler.cfg examples/Docker/data/acme_srv.cfg
          sudo cp .github/django_settings.py examples/Docker/data/settings.py

      - name: "[ PREPARE ] nginx django container"
        run: |
          docker run -d -p 80:80 --rm -id --network acme --name=acme-srv -v "$(pwd)/examples/Docker/data":/var/www/acme2certifier/volume/ grindsa/acme2certifier:nginx-django
          # docker exec acme-srv python3 /var/www/acme2certifier/tools/django_update.py
          # sudo chmod a+w examples/Docker/data/db.sqlite3

      - name: "[ SCAN ] Phonito Security Scan"
        uses: phonito/phonito-scanner-action@master
        with:
          image: grindsa/acme2certifier:nginx-django
          fail-level: MEDIUM
          phonito-token: '${{ secrets.PHONITO_TOKEN }}'
